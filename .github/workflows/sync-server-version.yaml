name: Sync Tags from openim-server and chat to openim-docker

on:
  schedule:
    - cron: '0 0 * * *'  # Runs at 00:00 every day
  workflow_dispatch: # Also allows manual triggering
  push:
    branches:
      - main

jobs:
  sync-tags:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout openim-docker repo
        uses: actions/checkout@v2
        with:
          repository: 'openimsdk/openim-docker'
          token: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Set up Docker and Docker Compose
        uses: docker/setup-buildx-action@v1

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq curl

      - name: Fetch the latest tag of openim-server
        id: server-tag
        run: |
          SERVER_TAG=$(curl -s https://api.github.com/repos/openimsdk/open-im-server/tags | jq -r '.[0].name')
          if [[ $SERVER_TAG == "null" ]]; then
            echo "No new tags found for openim-server. Exiting..."
            exit 78; # Exits the job early with success status
          fi
          echo "SERVER_TAG=${SERVER_TAG}" >> $GITHUB_ENV

      - name: Fetch the latest tag of chat
        id: chat-tag
        run: |
          CHAT_TAG=$(curl -s https://api.github.com/repos/openimsdk/chat/tags | jq -r '.[0].name')
          if [[ $CHAT_TAG == "null" ]]; then
            echo "No new tags found for chat. Exiting..."
            exit 78; # Exits the job early with success status
          fi
          echo "CHAT_TAG=${CHAT_TAG}" >> $GITHUB_ENV

      - name: Update .env.example with the latest tags
        run: |
          sed -i "s/SERVER_IMAGE_VERSION=.*/SERVER_IMAGE_VERSION=${SERVER_TAG}/" .env.example
          sed -i "s/CHAT_IMAGE_VERSION=.*/CHAT_IMAGE_VERSION=${CHAT_TAG}/" .env.example

      - name: Commit and Push Changes
        run: |
          git config --local user.email "3293172751ysy@gmail.com"
          git config --local user.name "kubbot"
          git add .env.example
          git commit -m "Update server and chat image versions to ${SERVER_TAG} and ${CHAT_TAG}" || echo "No changes to commit"
          git push || echo "No changes to push or push failed"

      - name: Check if tag already exists
        id: check-tag
        run: |
          if git rev-parse "${SERVER_TAG}-${CHAT_TAG}" >/dev/null 2>&1; then
            echo "Tag ${SERVER_TAG}-${CHAT_TAG} already exists. Skipping tag creation."
            echo "SKIP_TAG_CREATION=true" >> $GITHUB_ENV
          else
            echo "SKIP_TAG_CREATION=false" >> $GITHUB_ENV
          fi

      - name: Create and Push New Tag
        if: env.SKIP_TAG_CREATION == 'false'
        run: |
          git tag "${SERVER_TAG}-${CHAT_TAG}"
          git push origin "${SERVER_TAG}-${CHAT_TAG}"

      - name: Cleanup
        run: docker-compose down
        if: always()
